---
title: "Indicador de Desarrollo Económico (2018-2023)"
author: "Sofia Melcarne, Carlos Gila y Enrique Sayas"
format: 
  html:
    toc: true
    toc-title: Índice
    toc-location: right
  pdf:
    toc: true
    number-sections: true
    colorlinks: true
editor: source
---

```{r}
#| include: false
rm(list=ls())
# Especificamos las librerías necesarias en esta lista

packages = c("eurostat","tidyverse","ggplot2","lubridate","stringr","DT","kableExtra")

#use this function to check if each package is on the local machine
#if a package is installed, it will be loaded
#if any are not, the missing package(s) will be installed and loaded
package.check <- lapply(packages, FUN = function(x) {
  if (!require(x, character.only = TRUE)) {
    install.packages(x, dependencies = TRUE,repos='http://cran.rediris.es')
  }
  library(x, character.only = TRUE)
})

#verify they are loaded
search()
```

```{r}
#| include: false

miembros_UE27 <- data.frame(geo = c("BE","EL","LT","PT","BG","ES","LU","RO","CZ","FR","HU","SI","DK","HR","MT","SK","DE","IT","NL","FI","EE","CY","AT","SE","IE","LV","PL"),
                            nombre = c("Bélgica","Grecia","Lituania","Portugal","Bulgaria","España","Luxemburgo","Rumanía","R. Checa","Francia","Hungría","Eslovenia","Dinamarca","Croacia","Malta","Eslovaquia","Alemania","Italia","Países Bajos","Finlandia","Estonia","Chipre","Austria","Suecia","Irlanda","Letonia","Polonia"))
```

```{r}
#| include: false

map <- eurostat::get_eurostat_geospatial(nuts_level = 0)

map <- map %>% select(NAME_LATN,geo,geometry)

map$geo[map$geo == "EU27_2020"] <- "EU27"
```

```{r}
#| include: false

indicador <- data.frame(geo = c(miembros_UE27$geo,"EU27"))
```

# Introducción

# Planteamiento del problema

# Descriptivo

El Indicador de Desarrollo Económico (2018-2023) tiene como objetivo mostrar la distancia de los países de la Unión Europea respecto al peor caso de desarrollo económico. En este caso, se ha establecido la media europea como base para el diseño del ranking (EU27 = 100).

Para la elaboración del indicador se ha seleccionado cinco variables económicas clave:

-   Evolución del PIB per Capita deflactado respecto al año 2005.
-   Evolución de la tasa de paro
-   Evolución de la presión fiscal.
-   Evolución del poder adquisitivo de las familias respecto a la media europea.
-   Evolución de la deuda pública.

Para ello, han sido utilizados los últimos datos disponibles en Eurostat:

| Datos                            | Eurostat       |
|----------------------------------|----------------|
| PIB                              | namq_10_gdp    |
| Población                        | demo_pjan      |
| Deflactor                        | namq_10_gdp    |
| Tasa de Paro                     | une_rt_m       |
| Presión Fiscal                   | gov_10a_taxag  |
| Poder Aquisitivo de las Familias | tec00114       |
| Deuda Pública                    | gov_10dd_edpt1 |

No todas las variables serán igual de relevantes a la hora de calcular el indicador. Esto se debe a que en la variable Tasa de Paro se desconoce el número de fijos discontinuos en España, lo que puede llevar a una distorsión en la evolución de la tasa de desempleo entre 2018 y 2023.

## Variables

### PIB per Capita

```{r}
#| include: false

pob <- get_eurostat("demo_pjan") %>% 
  select(-c(freq,unit))

names(pob)[5] <- "pob"

pob$geo[pob$geo == "EU27_2020"] <- "EU27"
```

```{r}
#| include: false

pob_total <- pob %>% 
  filter(age == "TOTAL" & sex == "T") %>% 
  mutate(anyo = year(TIME_PERIOD)) %>% 
  select(-c(age,sex))
```

```{r}
#| include: false

PIB_Q <- get_eurostat("namq_10_gdp", filters = list(na_item = "B1GQ", s_adj = "SCA", unit = "CP_MEUR")) %>% 
  select(geo,time,values)

names(PIB_Q)[3] <- "PIB"

PIB_Q <- PIB_Q %>% 
  filter(!is.na(PIB) & geo %in% c(miembros_UE27$geo,"EU27_2020")) %>% 
  mutate(anyo = year(time), PIB = PIB * 1000000)

PIB_Q$geo[PIB_Q$geo == "EU27_2020"] <- "EU27"
```

```{r}
#| include: false

IPC_2005_Q <- get_eurostat("namq_10_gdp", filters = list(na_item = "B1GQ", s_adj = "SCA", unit = "PD05_EUR")) %>% 
  select(geo,time,values)

names(IPC_2005_Q)[3] <- "IPC"

IPC_2005_Q <- IPC_2005_Q %>% 
  filter(!is.na(IPC) & geo %in% c(miembros_UE27$geo,"EU27_2020")) %>% 
  mutate(anyo = year(time))

IPC_2005_Q$geo[IPC_2005_Q$geo == "EU27_2020"] <- "EU27"
```

```{r}
#| include: false

PPC_Q <- right_join(PIB_Q,pob_total) %>% 
  select(-TIME_PERIOD)

PPC_Q <- PPC_Q %>% mutate(PPC = PIB / pob)
```

```{r}
#| include: false

PPC_Q <- right_join(PPC_Q,select(IPC_2005_Q,-anyo), by = c("geo","time"))

PPC_Q <- PPC_Q %>% 
  mutate(PPC_real = PPC * 100 / IPC) %>% 
  select(geo,time,anyo,PPC,PPC_real)
```

```{r}
#| include: false

PIB_A <- PIB_Q %>% 
  group_by(geo,anyo) %>% 
  summarise(PIB = sum(PIB, na.rm = TRUE))

PIB_A
```

```{r}
#| include: false

PPC_A <- PPC_Q %>% 
  group_by(geo,anyo) %>% 
  summarise(PPC = sum(PPC, na.rm = TRUE), PPC_real = sum(PPC_real, na.rm = TRUE))

PPC_A
```

```{r}
#| include: false

dif_PPC_A <- PPC_A %>% 
  filter(anyo %in% c(2018,2023)) %>%
  pivot_longer(c(PPC,PPC_real),names_to = "tipo", values_to = "valor") %>% 
  pivot_wider(names_from = anyo, values_from = valor) %>% 
  mutate(dif_por = (`2023` - `2018`)/`2018` * 100)
```

```{r}
#| echo: false
#| warning: false

dif_PPC_EU <- dif_PPC_A %>%
  filter(geo == "EU27" & tipo == "PPC") %>%
  select(dif_por)

dif_PPC_EU <- cbind(dif_PPC_EU,x = "Finlandia")

dif_PPC_A %>%
  
  ungroup() %>%
  
  filter(tipo == "PPC" & geo != "EU27") %>%
  
  left_join(miembros_UE27) %>% 
  
  mutate(texto = ifelse(dif_por == max(dif_por) | geo == "ES",dif_por,NA),
         color = ifelse(geo == "ES","ES","Otros")) %>%
  
  ggplot(aes(x = reorder(nombre,desc(dif_por)), y = dif_por)) +
  
  geom_col(aes(fill = color), width = 0.6) +
  
  geom_text(aes(y = dif_por + 3, label = round(texto,1), color = color), size = 3) +
  
  geom_hline(data = dif_PPC_EU, aes(yintercept = dif_por), color = "#2873b7") +
  
  geom_text(data = dif_PPC_EU, aes(x = x, y = dif_por + 3, label = paste("EU27:", round(dif_por,1))), color = "#2873b7") +
  
  labs(title = "Crecimiento (%) del PIB per Cápita (2018-2023)") +
  
  scale_fill_manual(values = c("#d8d8d7","#c01717"),breaks = c("Otros","ES")) +
  
  scale_color_manual(values = c("#d8d8d7","#c01717"),breaks = c("Otros","ES")) +
  
  theme_minimal() +
  
  theme(axis.text.x = element_text(angle = 90, vjust = 0, hjust=0.95),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.position = "none",
        panel.grid.major.x = element_blank())
```

```{r}
#| echo: false
#| warning: false

dif_PPC_EU_real <- dif_PPC_A %>%
  filter(geo == "EU27", tipo == "PPC_real") %>%
  select(dif_por)

dif_PPC_EU_real <- cbind(dif_PPC_EU_real,x = "Luxemburgo")

dif_PPC_A %>%
  
  ungroup() %>%
  
  filter(tipo == "PPC_real" & geo != "EU27") %>%
  
  left_join(miembros_UE27) %>%
  
  mutate(texto = ifelse(dif_por == max(dif_por) | geo == "ES",dif_por,NA),
         color = ifelse(geo == "ES","ES","Otros")) %>%
  
  ggplot(aes(x = reorder(nombre,desc(dif_por)), y = dif_por)) +
  
  geom_col(aes(fill = color), width = 0.6) +
  
  geom_text(aes(y = dif_por + 1, label = round(texto,1), color = color), size = 3) +
  
  geom_hline(data = dif_PPC_EU_real, aes(yintercept = dif_por), color = "#2873b7") +
  
  geom_text(data = dif_PPC_EU_real, aes(x = x, y = dif_por + 1, label = paste("EU27:", round(dif_por,1))), color = "#2873b7") +
  
  labs(title = "Crecimiento real (%) del PIB per Cápita (2018-2023)", subtitle = "Índice de Precios 2005=100, euro") +
  
  scale_fill_manual(values = c("#d8d8d7","#c01717"),breaks = c("Otros","ES")) +
  
  scale_color_manual(values = c("#d8d8d7","#c01717"),breaks = c("Otros","ES")) +
  
  theme_minimal() +
  
  theme(axis.text.x = element_text(angle = 90, vjust = 0, hjust = 0.95),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.position = "none",
        panel.grid.major.x = element_blank())
```

```{r}
#| include: false

indicador <- left_join(indicador,dif_PPC_A %>% filter(tipo == "PPC_real") %>% select(geo,dif_por))
names(indicador)[2] <- "Ev_PPC_real"
```

### Tasa de Paro

```{r}
#| include: false

Paro_M <- get_eurostat("une_rt_m", filters = list(age = "TOTAL", s_adj = "SA", sex = "T", unit = "PC_ACT")) %>% 
  filter(!is.na(values) & geo %in% c(miembros_UE27$geo,"EU27_2020")) %>% 
  select(geo,time,values)

names(Paro_M)[3] <- "Tasa_Paro"

Paro_M$geo[Paro_M$geo == "EU27_2020"] <- "EU27"

Paro_A <- Paro_M %>% 
  mutate(anyo = year(time)) %>%
  group_by(geo,anyo) %>% 
  summarise(Tasa_Paro = mean(Tasa_Paro, na.rm = TRUE))
```

```{r}
#| include: false

dif_Paro_A <- Paro_A %>%
  filter(anyo %in% c(2018,2023)) %>%
  pivot_wider(names_from = anyo, values_from = "Tasa_Paro") %>%
  mutate(dif_por = (`2023` - `2018`)/`2018` * 100)
```

```{r}
#| echo: false
#| warning: false

dif_Paro_EU <- dif_Paro_A %>%
  filter(geo == "EU27") %>% 
  select(dif_por)

dif_Paro_EU <- cbind(dif_Paro_EU,x = "R. Checa")

dif_Paro_A %>%
  
  ungroup() %>%
  
  filter(geo != "EU27") %>% 
  
  left_join(miembros_UE27) %>%
  
  mutate(texto = ifelse(dif_por == min(dif_por) | geo == "ES",dif_por,NA),
         color = ifelse(geo == "ES","ES","Otros")) %>%
  
  ggplot(aes(x = reorder(nombre,dif_por), y = dif_por)) +
  
  geom_col(aes(fill = color), width = 0.6) +
  
  geom_text(aes(y = dif_por - 2, label = round(texto,1), color = color), size = 3) +
  
  geom_hline(data = dif_Paro_EU, aes(yintercept = dif_por), color = "#2873b7") +
  
  geom_text(data = dif_Paro_EU, aes(x = x, y = dif_por - 2, label = paste("EU27:", round(dif_por,1))), color = "#2873b7") +
  
  labs(title = "Crecimiento (%) de la Tasa de Paro (2018-2023)") +
  
  scale_fill_manual(values = c("#d8d8d7","#c01717"),breaks = c("Otros","ES")) +
  
  scale_color_manual(values = c("#d8d8d7","#c01717"),breaks = c("Otros","ES")) +
  
  theme_minimal() +
  
  theme(axis.text.x = element_text(angle = 90, vjust = 0, hjust = 0.95),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.position = "none",
        panel.grid.major.x = element_blank())
```

```{r}
#| include: false

indicador <- left_join(indicador,dif_Paro_A %>% select(geo,dif_por))
names(indicador)[3] <- "Ev_Paro"
```

### Presión Fiscal

```{r}
#| include: false
PF <- get_eurostat("gov_10a_taxag", filters = list(na_item = "D2_D5_D91_D61_M_D995", sector = "S13_S212", unit = "PC_GDP")) %>% 
  filter(!is.na(values) & geo %in% c(miembros_UE27$geo,"EU27_2020")) %>%  
  select(geo,time,values)

PF$geo[PF$geo == "EU27_2020"] <- "EU27"

names(PF)[3] <- "PF_GDP"

PF <- PF %>% mutate(anyo = year(time)) %>% select(-time)
```

```{r}
#| include: false

dif_PF_A <- PF %>% 
  filter(anyo %in% c(2018,2022)) %>%
  pivot_wider(names_from = anyo, values_from = "PF_GDP") %>% 
  mutate(dif_por = (`2022` - `2018`)/`2018` * 100)
```

```{r}
#| echo: false
#| warning: false

dif_PF_EU <- dif_PF_A %>%
  filter(geo == "EU27") %>% 
  select(dif_por)

dif_PF_EU <- cbind(dif_PF_EU,x = "Hungría")

dif_PF_A %>%
  
  ungroup() %>%
  
  filter(geo != "EU27") %>% 
  
  left_join(miembros_UE27) %>%
  
  mutate(texto = ifelse(dif_por == min(dif_por) | geo == "ES",dif_por,NA),
         color = ifelse(geo == "ES","ES","Otros")) %>%
  
  ggplot(aes(x = reorder(nombre,dif_por), y = dif_por)) +
  
  geom_col(aes(fill = color), width = 0.6) +
  
  geom_text(aes(y = ifelse(dif_por >= 0, dif_por + 0.5,dif_por - 0.5), label = round(texto,1), color = color), size = 3) +
  
  geom_hline(data = dif_PF_EU, aes(yintercept = dif_por), color = "#2873b7") +
  
  geom_text(data = dif_PF_EU, aes(x = x, y = dif_por + 0.5, label = paste("EU27:", round(dif_por,2))), color = "#2873b7") +
  
  labs(title = "Crecimiento (%) de la Presión Fiscal (2018-2022)") +
  
  scale_fill_manual(values = c("#d8d8d7","#c01717"),breaks = c("Otros","ES")) +
  
  scale_color_manual(values = c("#d8d8d7","#c01717"),breaks = c("Otros","ES")) +
  
  theme_minimal() +
  
  theme(axis.text.x = element_text(angle = 90, vjust = 0, hjust = 0.95),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.position = "none",
        panel.grid.major.x = element_blank())
```

```{r}
#| include: false

indicador <- left_join(indicador,dif_PF_A %>% select(geo,dif_por))
names(indicador)[4] <- "Ev_PF"
```

### Poder adquisitivo de las familias

```{r}
#| include: false

PIB_PPA <- get_eurostat("tec00114") %>% 
  filter(!is.na(values) & geo %in% c(miembros_UE27$geo,"EU27_2020")) %>% 
  mutate(anyo = year(TIME_PERIOD)) %>% 
  select(geo,values,anyo)

names(PIB_PPA)[2] <- "PIB_PPA"

PIB_PPA$geo[PIB_PPA$geo == "EU27_2020"] <- "EU27"
```

```{r}
#| include: false

dif_PPA_A <- PIB_PPA %>%
  filter(anyo %in% c(2018,2023)) %>%
  pivot_wider(names_from = anyo, values_from = "PIB_PPA") %>%
  mutate(dif_por = (`2023` - `2018`)/`2018` * 100)
```

```{r}
#| echo: false
#| warning: false

dif_PPA_EU <- dif_PPA_A %>%
  filter(geo == "EU27") %>% 
  select(dif_por)

dif_PPA_EU <- cbind(dif_PPA_EU,x = "Dinamarca")

dif_PPA_A %>%
  
  ungroup() %>%
  
  filter(geo != "EU27") %>%
  
  left_join(miembros_UE27) %>%
  
  mutate(texto = ifelse(dif_por == max(dif_por) | geo == "ES",dif_por,NA),
         color = ifelse(geo == "ES","ES","Otros")) %>%
  
  ggplot(aes(x = reorder(nombre,desc(dif_por)), y = dif_por)) +
  
  geom_col(aes(fill = color), width = 0.6) +
  
  geom_text(aes(y = ifelse(dif_por >= 0, dif_por + 1,dif_por - 1), label = round(texto,1), color = color), size = 3) +
  
  geom_hline(data = dif_PPA_EU, aes(yintercept = dif_por), color = "#2873b7") +
  
  geom_text(data = dif_PPA_EU, aes(x = x, y = dif_por + 1, label = paste("EU27:", round(dif_por,1))), color = "#2873b7") +
  
  labs(title = "Crecimiento (%) del poder adquisitivo de las familias (2018-2023)") +
  
  scale_fill_manual(values = c("#d8d8d7","#c01717"),breaks = c("Otros","ES")) +
  
  scale_color_manual(values = c("#d8d8d7","#c01717"),breaks = c("Otros","ES")) +
  
  theme_minimal() +
  
  theme(axis.text.x = element_text(angle = 90, vjust = 0, hjust = 0.95),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.position = "none",
        panel.grid.major.x = element_blank())
```

```{r}
#| include: false

indicador <- left_join(indicador,dif_PPA_A %>% select(geo,dif_por))
names(indicador)[5] <- "Ev_PPA"
```

### Deuda pública

```{r}
#| include: false

Deuda_PIB <- get_eurostat("gov_10dd_edpt1", filters = list(na_item = "GD", sector = "S13", unit = "PC_GDP")) %>% 
  filter(!is.na(values) & geo %in% c(miembros_UE27$geo,"EU27_2020")) %>% 
  mutate(anyo = year(time)) %>% 
  select(geo,values,anyo)

names(Deuda_PIB)[2] <- "Deuda_PIB"

Deuda_PIB$geo[Deuda_PIB$geo == "EU27_2020"] <- "EU27"
```

```{r}
#| include: false

dif_DP_A <- Deuda_PIB %>% 
  filter(anyo %in% c(2018,2022) & !str_detect(geo,"EA")) %>%
  pivot_wider(names_from = anyo, values_from = "Deuda_PIB") %>% 
  mutate(dif_por = (`2022` - `2018`)/`2018` * 100)
```

```{r}
#| echo: false
#| warning: false

dif_DP_EU <- dif_DP_A %>%
  filter(geo == "EU27") %>% 
  select(dif_por)

dif_DP_EU <- cbind(dif_DP_EU,x = "Dinamarca")

dif_DP_A %>%
  
  ungroup() %>%
  
  filter(geo != "EU27") %>%
  
  left_join(miembros_UE27) %>%
  
  mutate(texto = ifelse(dif_por == min(dif_por) | geo == "ES",dif_por,NA),
         color = ifelse(geo == "ES","ES","Otros")) %>%
  
  ggplot(aes(x = reorder(nombre,dif_por), y = dif_por)) +
  
  geom_col(aes(fill = color), width = 0.6) +
  
  geom_text(aes(y = ifelse(dif_por >= 0, dif_por + 5,dif_por - 5), label = round(texto,1), color = color), size = 3) +
  
  geom_hline(data = dif_DP_EU, aes(yintercept = dif_por), color = "#2873b7") +
  
  geom_text(data = dif_DP_EU, aes(x = x, y = dif_por + 8, label = paste("EU27:", round(dif_por,1))), color = "#2873b7") +
  
  labs(title = "Crecimiento (%) de la Deuda Pública sobre el PIB (2018-2022)") +
  
  scale_fill_manual(values = c("#d8d8d7","#c01717"),breaks = c("Otros","ES")) +
  
  scale_color_manual(values = c("#d8d8d7","#c01717"),breaks = c("Otros","ES")) +
  
  theme_minimal() +
  
  theme(axis.text.x = element_text(angle = 90, vjust = 0, hjust = 0.95),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.position = "none",
        panel.grid.major.x = element_blank())
```

```{r}
#| include: false

indicador <- left_join(indicador,dif_DP_A %>% select(geo,dif_por))
names(indicador)[6] <- "Ev_DP"
```

## Construcción del Indicador

```{r}
#| include: false

norma <- apply(indicador[,2:6], 2, function(x){sqrt(sum(x^2))})

pesos <- c(0.2125,0.15,rep(0.2125,3))

indicador_norma <- as.data.frame(t(apply(indicador[,2:6], 1, function(x){x * pesos / norma})))
indicador_norma <- cbind(geo = c(miembros_UE27$geo,"EU27"),indicador_norma)

ideal <- c(max(indicador_norma$Ev_PPC_real),min(indicador_norma$Ev_Paro),min(indicador_norma$Ev_PF),max(indicador_norma$Ev_PPA),min(indicador_norma$Ev_DP))
antiideal <- c(min(indicador_norma$Ev_PPC_real),max(indicador_norma$Ev_Paro),max(indicador_norma$Ev_PF),min(indicador_norma$Ev_PPA),max(indicador_norma$Ev_DP))

indicador_norma$Di <- apply(indicador_norma[,2:6], 1, function(x){sqrt(sum((x-ideal)^2))})
indicador_norma$Da <- apply(indicador_norma[,2:6], 1, function(x){sqrt(sum((x-antiideal)^2))})

indicador_norma$R <- indicador_norma$Da / (indicador_norma$Da + indicador_norma$Di)

indicador_norma$UE <- indicador_norma$R * 100 / indicador_norma$R[indicador_norma$geo == "EU27"]
```

Como se ha mencionado inicialmente, no todas las variables tienen el mismo peso en la elaboración del indicador.

| Variables                            | Peso   |
|--------------------------------------|--------|
| Ev. PIB per Capita                   | 0.2125 |
| Ev. Tasa de Paro                     | 0.15   |
| Ev. Presión Fiscal sobre el PIB      | 0.2125 |
| Ev. Poder Aquisitivo de las Familias | 0.2125 |
| Ev. Deuda Pública sobre el PIB       | 0.2125 |

Por otra parte, se calcula el caso ideal y el antiideal de desarrollo económico en base a los resultados obtenidos previamente. El ideal está conformado por:

-   Máxima evolución PIB per Capita.

-   Mayor descenso de la Tasa de Paro.

-   Mayor reducción de la Presión Fiscal sobre el PIB.

-   Mayor evolución del Poder Adquisitivo.

-   Mayor disminución de la Deuda Pública sobre el PIB.

Y el antiideal por:

-   Menor evolución PIB per Capita.

-   Mayor ascenso de la Tasa de Paro.

-   Mayor incremento de la Presión Fiscal sobre el PIB.

-   Mayor pérdida de Poder Adquisitivo.

-   Mayor aumento de la Deuda Pública sobre el PIB.

```{r}
#| include: false
ia <- as.data.frame(rbind(c(max(indicador$Ev_PPC_real),min(indicador$Ev_Paro),min(indicador$Ev_PF),max(indicador$Ev_PPA),min(indicador$Ev_DP)),
                          c(min(indicador$Ev_PPC_real),max(indicador$Ev_Paro),max(indicador$Ev_PF),min(indicador$Ev_PPA),max(indicador$Ev_DP))))
ia <- round(ia,2)
rownames(ia) <- c("Ideal","Antiideal")
names(ia) <- c("Evolución PIB per Capita","Evolución Tasa de Paro","Evolución Presión Fiscal","Evolución Poder Adquisitivo","Evolución Deuda Pública")
```

```{r}
#| echo: false
#| warning: false

datatable(ia)
```

Posteriormente, se calcula la distancia de cada país al ideal y al antiideal.

$$
D^{ideal}_i = \sqrt{\sum_{j=1}^{5}(ideal[j]-pais_i[j])^2}
$$

$$
D^{antiideal}_i = \sqrt{\sum_{j=1}^{5}(antiideal[j]-pais_i[j])^2}
$$

Finalmente, se obtiene el indicador para cada país mediante la siguiente fórmula:

$$
I_i = \frac{D_i^{antiideal}}{D_i^{ideal}+D_i^{antiideal}}
$$

# Resultados

```{r}
#| include: false

ranking <- indicador_norma %>%
  filter(geo != "EU27") %>% 
  select(geo,Ev_PPC_real) %>% 
  arrange(desc(Ev_PPC_real)) %>%
  mutate(`Ev_PPC` = 1:27) %>% 
  select(-Ev_PPC_real)

ranking <- indicador_norma %>%
  filter(geo != "EU27") %>% 
  select(geo,Ev_Paro) %>% 
  arrange(Ev_Paro) %>%
  mutate(`Ev_Paro` = 1:27) %>% 
  right_join(ranking)

ranking <- indicador_norma %>%
  filter(geo != "EU27") %>% 
  select(geo,Ev_PF) %>% 
  arrange(Ev_PF) %>%
  mutate(`Ev_PF` = 1:27) %>% 
  right_join(ranking)

ranking <- indicador_norma %>%
  filter(geo != "EU27") %>% 
  select(geo,Ev_PPA) %>% 
  arrange(desc(Ev_PPA)) %>%
  mutate(`Ev_PPA` = 1:27) %>% 
  right_join(ranking)

ranking <- indicador_norma %>%
  filter(geo != "EU27") %>% 
  select(geo,Ev_DP) %>% 
  arrange(Ev_DP) %>%
  mutate(`Ev_DP` = 1:27) %>% 
  right_join(ranking)

ranking <- indicador_norma %>%
  filter(geo != "EU27") %>% 
  select(geo,UE) %>% 
  arrange(desc(UE)) %>%
  mutate(`Ranking` = 1:27,
         UE = round(UE,1)) %>% 
  right_join(ranking)
```

::: {.content-visible when-format="html"}
```{r}
#| echo: false
#| warning: false

ranking_tabla <- ranking %>% left_join(miembros_UE27)
 
ranking_tabla <- ranking_tabla %>% select(nombre,Ev_PPC,Ev_Paro,Ev_PF,Ev_PPA,Ev_DP,UE,Ranking)

names(ranking_tabla) <- c("Países UE-27","Evolución PIB per Capita","Evolución Tasa de Paro","Evolución Presión Fiscal","Evolución Poder Adquisitivo","Evolución Deuda Pública","IDE\nUE=100","Ranking")

datatable(ranking_tabla)
```
:::

::: {.content-visible when-format="pdf"}
```{r}
#| echo: false
#| warning: false

names(ranking_tabla) <- c("Países UE-27","Evolución PIB per Capita","Evolución Tasa de Paro","Evolución Presión Fiscal","Evolución Poder Adquisitivo","Evolución Deuda Pública","UE=100","Ranking")

ranking_tabla %>%
  kable(caption = "Ranking Indicador de Desarrollo Económico (2018-2023)") %>%
  kable_classic()
```
:::

```{r}
#| echo: false
#| warning: false

map %>%
  
  left_join(ranking %>% select(geo,UE)) %>% 
  
  ggplot() +
  
  geom_sf(aes(geometry = geometry, fill = UE)) +
  
  geom_sf_label(aes(label = UE), size = 2.5) +
  
  coord_sf(xlim = c(-25,45), ylim = c(30,70)) +
  
  scale_fill_viridis_c(option = "magma") +
  
  labs(title = "Indicador de Desarrollo Económico (2018-2023)") +
  
  theme_minimal() +
  
  theme(axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.position = c(0.5,0.05),
        legend.direction = "horizontal",
        legend.title = element_blank())
```

# Conclusiones
