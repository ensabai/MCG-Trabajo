---
title: "Trabajo Decente y Crecimiento Económico"
author: "Sofia Melcarne, Carlos Gila y Enrique Sayas"
format: html
editor: visual
---

```{r}
rm(list=ls())
# Especificamos las librerías necesarias en esta lista

packages = c("eurostat","tidyverse",'ggplot2','lubridate','stringr','ggthemes')

#use this function to check if each package is on the local machine
#if a package is installed, it will be loaded
#if any are not, the missing package(s) will be installed and loaded
package.check <- lapply(packages, FUN = function(x) {
  if (!require(x, character.only = TRUE)) {
    install.packages(x, dependencies = TRUE,repos='http://cran.rediris.es')
  }
  library(x, character.only = TRUE)
})

#verify they are loaded
search()
```

```{r}
map <- eurostat::get_eurostat_geospatial(nuts_level = 0)
map <- map %>% select(NAME_LATN,geo,geometry)
map$geo[map$geo == "EU27_2020"] <- "EU27"
```

```{r}
map %>% 
  ggplot() +
  geom_sf() +
  coord_sf(xlim = c(-25,45), ylim = c(30,70)) +
  theme_minimal()
```

# Introducción

# Planteamiento problema

## Indicadores

### Índice de Gini

```{r}
gini <- get_eurostat("ilc_di12")
gini <- gini %>% mutate(year = year(TIME_PERIOD)) %>% select(-c(indic_il,freq)) %>% filter(!str_detect(geo,"EU|EA|NMS"))
names(gini)[3] <- "gini"
gini$geo[gini$geo == "EU27_2020"] <- "EU27"
```

```{r}
gini_anyo <- left_join(map,filter(gini, year == 2022),by = "geo")
```

```{r}
gini_anyo %>%
  mutate(gini_cut = eurostat::cut_to_classes(gini,n = 5)) %>% 
  ggplot() +
  geom_sf(aes(geometry = geometry, fill = gini_cut)) +
  coord_sf(xlim = c(-25,45), ylim = c(30,70)) +
  scale_fill_viridis_d(option = "magma") +
  theme_minimal()
```

```{r}
anyo <- 2022
anyo2 <- anyo - 1

gini_eu <- gini %>%
  filter(year == anyo) %>%
  group_by(year) %>% 
  summarise(gini_eu = mean(gini, na.rm = TRUE)) %>%
  ungroup()

nombres <- gini %>%
  select(geo, year,gini) %>%
  filter(year == anyo)

gini_eu <- left_join(nombres,gini_eu, by = "year")

gini_anyo1 <- gini %>% filter(year == anyo)
gini_anyo2 <- gini %>% filter(year == anyo2 & geo %in% gini_anyo1$geo)
```

```{r}
gini_anyo1 %>%
  
  ggplot(aes(x = gini, y = reorder(geo, desc(gini)))) +
  
  geom_segment(data = gini_eu, aes(x = gini, xend = gini_eu), size = 1.25, color = "#cccccf") +
  
  geom_vline(data = gini_eu, aes(xintercept = unique(gini_eu), color = "Media Europea"), size = 1) +
  
  geom_point(aes(color = as.character(anyo)), size = 4) +
  
  geom_point(data = gini_anyo2, aes(x = gini, color = as.character(anyo2)), size = 3) +
  
  labs(x = "Índice Gini", y = "", title = "Índice de Gini", color = "Leyenda") +
  
  scale_color_manual(values = c("#797979","#2e9fd9","#bcb7b0")) +
  
  theme_minimal()
```

### Población

```{r}
pob <- get_eurostat("demo_pjan") %>% select(-c(freq,unit))
names(pob)[5] <- "pob"
pob$geo[pob$geo == "EU27_2020"] <- "EU27"
```

```{r}
pob_total <- pob %>% filter(age == "TOTAL" & sex == "T") %>% mutate(anyo = year(TIME_PERIOD)) %>% select(-c(age,sex))
```

```{r}
pob_sex_edad <- pob %>% filter(!(age %in% c("Y_OPEN","UNK","TOTAL")) & sex != "T") %>% mutate(anyo = year(TIME_PERIOD))
```

```{r}
pob_sex_edad$age <- str_remove(pob_sex_edad$age,"Y")
pob_sex_edad$age[pob_sex_edad$age == "_LT1"] <- "0"
pob_sex_edad$age <- as.numeric(pob_sex_edad$age)
```

```{r}
# pob_sex_edad %>% 
#   filter(geo == "ES" & anyo == 2023) %>%
#   mutate(pob = ifelse(sex == "F", pob, -pob) / sum(pob) * 100) %>% 
#   ggplot() +
#   geom_col(aes(x = age, y = pob, fill = sex)) +
#   coord_flip() +
#   theme_minimal()
```

```{r}
pob_sex_edad_5 <- pob_sex_edad %>% mutate(age_5 = paste(str_pad(string = age %/% 5 * 5, width = 2,side = "left", pad = "0"),"-",str_pad(age %/% 5 * 5 + 4, width = 2,side = "left", pad = "0")))
pob_sex_edad_5 <- pob_sex_edad_5 %>%
  group_by(age_5,sex,geo,anyo) %>% 
  summarise(pob = sum(pob, na.rm = TRUE))
```

```{r}
pob_sex_edad_5 %>%
  ungroup() %>% 
  filter(geo == "ES" & anyo == 2023) %>%
  mutate(pob = ifelse(sex == "F", pob, -pob) / sum(pob) * 100) %>% 
  ggplot(aes(x = pob, y = age_5)) +
  geom_col(aes(fill = sex)) +
  labs(title = "Pirámide Poblacional", x = "%", y = "Rando de Edad", caption = "Fuente: Eurostat") +
  theme_minimal()
```

### PIB per Capita

```{r}
PIB_Q <- get_eurostat("namq_10_gdp", filters = list(na_item = "B1GQ", s_adj = "SCA", unit = "CP_MEUR")) %>% select(geo,time,values)
names(PIB_Q)[3] <- "PIB"
PIB_Q <- PIB_Q %>% filter(!is.na(PIB)) %>% mutate(anyo = year(time), PIB = PIB * 1000000)
PIB_Q$geo[PIB_Q$geo == "EU27_2020"] <- "EU27"
```

```{r}
IPC_2005_Q <- get_eurostat("namq_10_gdp", filters = list(na_item = "B1GQ", s_adj = "SCA", unit = "PD05_EUR")) %>% select(geo,time,values)
names(IPC_2005_Q)[3] <- "IPC"
IPC_2005_Q <- IPC_2005_Q %>% filter(!is.na(IPC)) %>% mutate(anyo = year(time))
IPC_2005_Q$geo[IPC_2005_Q$geo == "EU27_2020"] <- "EU27"
```

```{r}
PPC_Q <- right_join(PIB_Q,pob_total) %>% select(-TIME_PERIOD)
PPC_Q <- PPC_Q %>% mutate(PPC = PIB / pob)
```

```{r}
PPC_Q %>% 
  filter(geo %in% c("ES","DE","FR","EE")) %>% 
  ggplot(aes(x = time, y = PPC, color = geo)) +
  geom_line() +
  theme_minimal()
```

```{r}
PPC_Q <- right_join(PPC_Q,select(IPC_2005_Q,-anyo), by = c("geo","time"))
PPC_Q <- PPC_Q %>% mutate(PPC_real = PPC * 100 / IPC) %>% select(geo,time,anyo,PPC,PPC_real)
```

```{r}
PPC_Q %>% 
  filter(geo %in% c("ES","DE","FR","CY","PT","EE") & !is.na(PPC_real)) %>% 
  ggplot(aes(x = time, y = PPC_real, color = geo)) +
  geom_line() +
  theme_minimal()
```

```{r}
PIB_A <- PIB_Q %>% group_by(geo,anyo) %>% summarise(PIB = sum(PIB, na.rm = TRUE))
PIB_A
```

```{r}
PPC_A <- PPC_Q %>% group_by(geo,anyo) %>% summarise(PPC = sum(PPC, na.rm = TRUE), PPC_real = sum(PPC_real, na.rm = TRUE))
PPC_A
```

```{r}
PPC_A %>%
  filter(anyo == 2022 & !(geo %in% c("EA19","EA20"))) %>%
  mutate(color = case_when(geo == "ES" ~ "1",
                           geo == "EU27" ~ "2",
                           geo != "ES" & geo != "EU27" ~ "0")) %>%
  ggplot(aes(x = PPC_real, y = reorder(geo,PPC_real))) + 
  geom_col(width = 0.4, aes(fill = color)) +
  labs(title = "PIB per Capita", subtitle = "Índice de Precios 2005=100, euro", caption = "Fuente: Eurostat") +
  scale_fill_manual(values = c("#d8d8d7","#c01717","#2873b7"),breaks = c("0","1","2")) +
  theme_minimal() +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.position = "none",
        panel.grid.major.y = element_blank(),
        panel.grid.major.x = element_line(linetype = 8),
        panel.grid.minor.x = element_line(linetype = 8),
        aspect.ratio = 4/3)
```

```{r}
left_join(map,filter(PPC_A, anyo == 2023)) %>% 
  #mutate(PPC_real_cut = eurostat::cut_to_classes(PPC_real,n = 5)) %>% 
  ggplot() +
  geom_sf(aes(geometry = geometry, fill = PPC_real)) +
  coord_sf(xlim = c(-25,45), ylim = c(30,70)) +
  scale_fill_viridis_c(option = "magma") +
  theme_minimal()
```

### Presión Fiscal

```{r}
PF <- get_eurostat("gov_10a_taxag", filters = list(na_item = "D2_D5_D91_D61_M_D995", sector = "S13_S212", unit = "PC_GDP")) %>% filter(!is.na(values)) %>%  select(geo,time,values)

PF$geo[PF$geo == "EU27_2020"] <- "EU27"
names(PF)[3] <- "PF_GDP"

PF <- PF %>% mutate(anyo = year(time)) %>% select(-time)
```

```{r}
left_join(map,filter(PF, anyo == 2022)) %>%
  ggplot() +
  geom_sf(aes(geometry = geometry, fill = PF_GDP)) +
  geom_sf_text(aes(label = PF_GDP), color = "white", size = 2.5) +
  coord_sf(xlim = c(-25,45), ylim = c(30,70)) +
  scale_fill_viridis_c(option = "magma", direction = -1) +
  theme_minimal()
```

```{r}
anyo3 <- 2022
PFEU <- PF$PF_GDP[PF$geo == "EU27" & PF$anyo == anyo3]
PF %>% 
  filter(anyo == anyo3 & !is.na(PF_GDP) & !str_detect(geo,"EA")) %>%
  mutate(color = case_when(geo == "ES" ~ "1",
                           geo == "EU27" ~ "2",
                           geo != "ES" & geo != "EU27" ~ "0"),
         PF_EU = PF_GDP * 100 / PFEU) %>%
  ggplot(aes(x = PF_EU, y = reorder(geo,PF_EU))) + 
  geom_col(width = 0.4, aes(fill = color)) +
  geom_text(aes(label = round(PF_EU), x = PF_EU + 5), col = "#646363", size = 2) +
  labs(title = "Presión Fiscal", subtitle = paste("Año:", anyo3), caption = "Fuente: Eurostat") +
  scale_fill_manual(values = c("#d8d8d7","#c01717","#2873b7"),breaks = c("0","1","2")) +
  theme_minimal() +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.position = "none",
        panel.grid.major.y = element_blank(),
        panel.grid.major.x = element_line(linetype = 8),
        panel.grid.minor.x = element_line(linetype = 8),
        aspect.ratio = 4/3)
```

### Esfuerzo Fiscal

```{r}
EF <- left_join(PF,PPC_A, by = c("geo","anyo"))
EF <- EF %>% mutate(EF = PF_GDP / PPC * 100) %>% select(geo,anyo,EF)
```

```{r}
left_join(map,filter(EF, anyo == 2022)) %>%
  ggplot() +
  geom_sf(aes(geometry = geometry, fill = EF)) +
  geom_sf_text(aes(label = round(EF,2)), color = "white", size = 2.5) +
  coord_sf(xlim = c(-25,45), ylim = c(30,70)) +
  scale_fill_viridis_c(option = "magma", direction = -1) +
  theme_minimal()
```

```{r}
anyo3 <- 2022
EFEU <- EF$EF[EF$geo == "EU27" & EF$anyo == anyo3]
EF %>% 
  filter(anyo == anyo3 & !is.na(EF) & !str_detect(geo,"EA")) %>%
  mutate(color = case_when(geo == "ES" ~ "1",
                           geo == "EU27" ~ "2",
                           geo != "ES" & geo != "EU27" ~ "0"),
         EF_EU = EF * 100 / EFEU) %>%
  ggplot(aes(x = EF_EU, y = reorder(geo,EF_EU))) + 
  geom_col(width = 0.4, aes(fill = color)) +
  geom_text(aes(label = round(EF_EU), x = EF_EU + 10), col = "#646363", size = 2) +
  labs(title = "Esfuerzo Fiscal", subtitle = paste("Año:", anyo3), caption = "Fuente: Eurostat") +
  scale_fill_manual(values = c("#d8d8d7","#c01717","#2873b7"),breaks = c("0","1","2")) +
  theme_minimal() +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.position = "none",
        panel.grid.major.y = element_blank(),
        panel.grid.major.x = element_line(linetype = 8),
        panel.grid.minor.x = element_line(linetype = 8),
        aspect.ratio = 4/3)
```

# Descriptivo

# Resultados

# Conclusiones
